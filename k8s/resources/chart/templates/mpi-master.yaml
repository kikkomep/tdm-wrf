apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-master
  labels:
    app: {{ template "..name" . }}
    chart: {{ template "..chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: master
    {{if .Values.networkPolicy.enabled }}allow_from_external: "true"{{ end }}
spec:
  restartPolicy: OnFailure
  hostname: {{ .Release.Name }}-master
  subdomain: {{ .Release.Name }}
        {{- if .Values.mpiMaster.customScheduling.enabled }}
  schedulerName: {{.Values.mpiMaster.customScheduling.schedulerName}}
        {{- end }}
  securityContext:
        {{ toYaml .Values.mpiMaster.securityContext | indent 8 }}
        {{- if .Values.mpiImage.pullSecrets }}
  imagePullSecrets:
        {{ toYaml .Values.mpiImage.pullSecrets | indent 2 }}
        {{- end }}
  volumes:
    - name: config-data
      configMap:
        name: {{ .Release.Name }}-config-data
    - name: init-data
      persistentVolumeClaim:
        claimName: {{ .Release.Name }}-init-data-claim
    - name: log-data
      persistentVolumeClaim:
        claimName: {{ .Release.Name }}-log-data-claim
    - name: run-data
      persistentVolumeClaim:
        claimName: {{ .Release.Name }}-run-data-claim
    - name: out-data
      emptyDir: {}
    - name: kube-openmpi-guillotine
      emptyDir: {}
    - name: kube-openmpi-hostfile-dir
      emptyDir: {}
    - name: hdfs-config
      configMap:
        name: {{ .Values.persistence.out_data.hdfs.configMap }}
          {{ if .Values.mpiMaster.autoUpdateHostfile.enabled }}
    - name: kube-openmpi-hostfile-updater-params
      configMap:
        name: {{ .Release.Name }}-assets
        items:
          - key: hostfile_update_every
            path: update_every
          {{ end }}
    - name: kube-openmpi-utils
      configMap:
        name: {{ .Release.Name }}-assets
        items:
          - key: gen_hostfile.sh
            path: gen_hostfile.sh
            mode: 365
    - name: kube-openmpi-ssh-key
      secret:
        secretName: {{ .Release.Name }}-ssh-key
        defaultMode: 256
          {{- range .Values.appCodesToSync }}
    - name: kube-openmpi-sync-{{ .name }}
      emptyDir: {}
          {{- if .gitSecretName }}
    - name: kube-openmpi-sync-{{ .name }}-secret
      secret:
        secretName: {{ .gitSecretName }}
        defaultMode: 256
        {{- end }}
        {{- end }}
        {{ if .Values.mpiMaster.volumes }}
        {{ toYaml .Values.mpiMaster.volumes | indent 2 }}
        {{ end }}
  initContainers:
          {{- $root := . }}
          {{- range .Values.appCodesToSync }}
    - name: {{ .name }}-fetch
      image: {{ $root.Values.gitSyncImage.repository }}:{{ $root.Values.gitSyncImage.tag }}
      imagePullPolicy: {{ $root.Values.gitSyncImage.pullPolicy }}
      env:
        - name: GIT_SYNC_REPO
          value: {{ .gitRepo }}
        - name: GIT_SYNC_BRANCH
          value: {{ .gitBranch }}
        - name: GIT_SYNC_DEST
          value: {{ .name }}
        - name: GIT_SYNC_ONE_TIME
          value: "true"
        - name: GIT_SYNC_WAIT
          value: {{ .fetchWaitSecond | default "0" | quote }}
              {{- if .gitSecretName }}
        - name: GIT_SYNC_SSH
          value: "true"
        - name: GIT_KNOWN_HOSTS
          value: "false"
            {{- end }}
      volumeMounts:
        - name: kube-openmpi-sync-{{ .name }}
          mountPath: /git
              {{- if .gitSecretName }}
        - name: kube-openmpi-sync-{{ .name }}-secret
          mountPath: /etc/git-secret
      securityContext:
        runAsUser: 0
          {{- end }}
          {{- end }}
    {{- if not .Values.global.running.skip.finalize }}
    - name: wait-for-wrf-data-init
      image: "groundnuty/k8s-wait-for:latest"
      imagePullPolicy: "Always"
      args: ["job", "{{.Release.Name}}-wrf-init-job-2-finalize-wd"]
    {{- end }}
    - name: hostfile-initializer
      image: {{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}
      imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
      command:
        - sh
        - -c
        - |
          /kube-openmpi/utils/gen_hostfile.sh $HOSTFILE_DIR/hostfile
      env:
        - name: HOSTFILE_DIR
          value: /kube-openmpi/generated
      volumeMounts:
        - name: kube-openmpi-hostfile-dir
          mountPath: /kube-openmpi/generated
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
    - name: run-data-cleaner
      image: "{{ .Values.wrfInitializerImage.repository }}:{{ .Values.wrfInitializerImage.tag }}"
      imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
      command: ['/bin/sh', '-c']
      args:
        - rm -Rf ${LOG_DATA}/${HOSTNAME} ${RUN_DATA}/rsl.*
      env:
        - name: RUN_DATA
          value: {{ .Values.persistence.run_data.path }}
        - name: LOG_DATA
          value: {{ .Values.persistence.log_data.path }}
      volumeMounts:
        - name: run-data
          mountPath: {{ .Values.persistence.run_data.path }}
        - name: log-data
          mountPath: {{ .Values.persistence.log_data.path }}
  containers:
    # DEBUG shell
    # - name: shell
    #   image: "{{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}"
    #   imagePullPolicy: "{{ .Values.mpiDataWriterImage.pullPolicy }}"
    #   command: ["/bin/sleep","{{default "3600" .Values.sleepyTime}}"]
    #   volumeMounts:
    #     - name: config-data
    #       mountPath: {{ .Values.persistence.config_data.path }}
    #     - name: init-data
    #       mountPath: {{ .Values.persistence.init_data.path }}
    #     - name: run-data
    #       mountPath: {{ .Values.persistence.run_data.path }}
    #     - name: kube-openmpi-guillotine
    #       mountPath: /kube-openmpi/guillotine
    - name: mpi-master
      image: "{{ .Values.mpiImage.repository }}:{{ .Values.mpiImage.tag }}"
      imagePullPolicy: {{ .Values.mpiImage.pullPolicy }}
      ports:
        - containerPort: 2022
      env:
        - name: HOSTFILE
          value: /kube-openmpi/generated/hostfile
        - name: GUILLOTINE
          value: /kube-openmpi/guillotine
        - name: CONFIG_DATA
          value: {{ .Values.persistence.config_data.path }}
        - name: RUN_DATA
          value: {{ .Values.persistence.run_data.path }}
        - name: OUT_DATA
          value: {{ .Values.persistence.out_data.source_path }}
        - name: LOG_DATA
          value: {{ .Values.persistence.log_data.path }}
      {{- if .Values.mpiMaster.oneShot.enabled }} 
        - name: ONE_SHOT
          value: "true"
      command: [
        "/init.sh", "run-wrf", 
        "{{ .Values.persistence.run_data.path }}", 
         "{{ .Values.global.running.processes }}",
         "{{ .Values.global.running.processes_per_worker }}"
        ]      
      {{ end }}
      volumeMounts:
        - name: config-data
          mountPath: {{ .Values.persistence.config_data.path }}
        - name: run-data
          mountPath: {{ .Values.persistence.run_data.path }}
        - name: out-data
          mountPath: {{ .Values.persistence.out_data.source_path }}
        - name: log-data
          mountPath: {{ .Values.persistence.log_data.path }}
        - name: kube-openmpi-guillotine
          mountPath: /kube-openmpi/guillotine
        - name: kube-openmpi-ssh-key
          mountPath: /ssh-key/openmpi
        - name: kube-openmpi-hostfile-dir
          mountPath: /kube-openmpi/generated/
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
              {{- range .Values.appCodesToSync }}
        - name: kube-openmpi-sync-{{ .name }}
          mountPath: {{ .mountPath }}
          {{ if .subPath }}subPath: {{.subPath}} {{ end }}
          {{- end }}
          {{ if .Values.mpiMaster.volumeMounts  }}
          {{ toYaml .Values.mpiMaster.volumeMounts | indent 4 }}
          {{ end }}
      resources:
          {{ toYaml .Values.mpiMaster.resources | indent 10 }}
    {{- if .Values.persistence.enable_writer }}
    - name: data-writer
      image: "{{ .Values.mpiDataWriterImage.repository }}:{{ .Values.mpiDataWriterImage.tag }}"
      imagePullPolicy: {{ .Values.mpiDataWriterImage.pullPolicy }}
      env:
        - name: HADOOP_CUSTOM_CONF_DIR
          value: "/etc/hadoop-custom-conf"
        - name: CONFIG_DATA
          value: {{ .Values.persistence.config_data.path }}
        - name: RUN_DATA
          value: {{ .Values.persistence.run_data.path }}
        - name: OUT_DATA
          value: {{ .Values.persistence.out_data.source_path }}
        - name: LOG_DATA
          value: {{ .Values.persistence.log_data.path }}
      command: ['/bin/bash', '-l', '-c']
      args:
        #- /entrypoint.sh python3 app.py --debug -f ${CONFIG_DATA}/config.json start
        #- /entrypoint.sh /usr/bin/tail -f /dev/null
        - /entrypoint.sh python3 $(which writer.py) --debug --master -f ${CONFIG_DATA}/wrf.yaml start
        #- /entrypoint.sh usr/bin/sleep 5
      ports:
        - containerPort: 2022
      volumeMounts:
        - name: config-data
          mountPath: {{ .Values.persistence.config_data.path }}
        - name: run-data
          mountPath: {{ .Values.persistence.run_data.path }}
        - name: out-data
          mountPath: {{ .Values.persistence.out_data.source_path }}
        - name: log-data
          mountPath: {{ .Values.persistence.log_data.path }}
        - name: kube-openmpi-ssh-key
          mountPath: /ssh-key/openmpi
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
        - name: hdfs-config
          mountPath: /etc/hadoop-custom-conf
          readOnly: true
              {{- range .Values.appCodesToSync }}
        - name: kube-openmpi-sync-{{ .name }}
          mountPath: {{ .mountPath }}
          {{ if .subPath }}subPath: {{.subPath}} {{ end }}
            {{- end }}
            {{ if .Values.mpiWorkers.volumeMounts }}
            {{ toYaml .Values.mpiWorkers.volumeMounts | indent 8 }}
            {{ end }}      
    {{ end }}
    {{ if .Values.mpiMaster.oneShot.enabled }}
    {{ if .Values.mpiMaster.oneShot.autoScaleDownWorkers }}    
    - name: worker-auto-downing
      image: "{{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}"
      imagePullPolicy: "{{ .Values.kubectlImage.pullPolicy }}"
      command:
        - sh
        - -c
        - |
          while [[ ! -e $GUILLOTINE/execute ]];
          do
            sleep 5;
            echo -n .
          done
          echo
          return_code=$(cat $GUILLOTINE/execute)
          echo Exit code: $return_code
          if [ "$return_code" = 0 ]; then
            until [[ -e "{{ .Values.persistence.log_data.path }}/__SUCCESS__" ]]; \
            do 
              echo "Waiting for data-writer to finish...";
              sleep 5;
            done  
            echo "All writers have finished... terminating workers"
            kubectl -n {{ .Release.Namespace }} scale statefulsets {{ .Release.Name }}-worker --replicas=0
          fi
          echo Done.
      env:
        - name: GUILLOTINE
          value: /kube-openmpi/guillotine
      volumeMounts:
        - name: kube-openmpi-guillotine
          mountPath: /kube-openmpi/guillotine
        - name: log-data
          mountPath: {{ .Values.persistence.log_data.path }}
    {{ end }}
    {{ end }}
    {{ if .Values.mpiMaster.autoUpdateHostfile.enabled }}
    - name: hostfile-updater
      image: {{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}
      imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
      command:
        - sh
        - -c
        - |
          while [ ! -e $GUILLOTINE/execute ];
          do
            /kube-openmpi/utils/gen_hostfile.sh $HOSTFILE_DIR/hostfile 1
            if [ -e /kube-openmpi/hostfile-updater-params/update_every ]; then
              SLEEP=$(cat /kube-openmpi/hostfile-updater-params/update_every)
            fi
            sleep ${SLEEP:-15}
          done
          echo Done.
      env:
        - name: HOSTFILE_DIR
          value: /kube-openmpi/generated
        - name: GUILLOTINE
          value: /kube-openmpi/guillotine
      volumeMounts:
        - name: kube-openmpi-hostfile-dir
          mountPath: /kube-openmpi/generated
        - name: kube-openmpi-guillotine
          mountPath: /kube-openmpi/guillotine
        - name: kube-openmpi-utils
          mountPath: /kube-openmpi/utils
        - name: kube-openmpi-hostfile-updater-params
          mountPath: /kube-openmpi/hostfile-updater-params
        {{ end }}
  {{- with .Values.nodeSelector }}
  nodeSelector:
        {{ toYaml . | indent 4 }}
  {{- end }}
  {{- with .Values.mpiMaster.tolerations }}
  tolerations:
        {{ toYaml . | indent 4 }}
  {{- end }}
  {{- with .Values.mpiMaster.affinity }}
  affinity:
        {{ toYaml . | indent 4 }}
  {{- end }}
